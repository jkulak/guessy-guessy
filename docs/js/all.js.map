{"version":3,"sources":["game.js","game-interface.js","google.js","main.js"],"names":["game","count","settings","answerTiemLimit","currentGame","points","question","currentQuestion","timeLeft","questonsFile","timer","debug","init","endpoint","fetch","then","data","json","questions","new","answers","innerHTML","updateStats","enableControls","nextQuestion","stop","clearInterval","disableControls","iterate","revealHint","logAnswer","answer","phrase","len","Math","floor","length","stars","Array","join","playAnswerInput","placeholder","substr","slice","addPoints","result","random","description","setInterval","displayQuestion","skipQuestion","checkAnswer","value","toLowerCase","focus","definitionDesc","hintDesc","statsQuestion","statsPoints","statsTimer","li","document","createElement","classList","add","insertBefore","childNodes","querySelector","ctrlNewGame","onclick","ctrlStop","playAnswerForm","onsubmit","playSkip","addEventListener","b","o","i","l","e","r","GoogleAnalyticsObject","q","push","arguments","Date","getElementsByTagName","src","parentNode","window","ga"],"mappings":"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","file":"all.js","sourcesContent":["'use strict';\n\nconst game = {\n\n    // Number of games played\n    count: 0,\n\n    // Game settings\n    settings: {\n        answerTiemLimit: 10\n    },\n\n    // Current game data\n    currentGame: {\n        // Number of points in current game\n        points: 0,\n        question: 0\n    },\n\n    // Current question data\n    currentQuestion: {\n        timeLeft: 0\n    },\n\n    // File with a dictionary\n    questonsFile: 'dict-easy.json',\n\n    // Interval timer handler\n    timer: null,\n\n    // Enable debugging\n    debug: false,\n\n    // Init (bootstrap) the game\n    init: function () {\n        const endpoint = game.questonsFile;\n\n        fetch(endpoint)\n            .then(data => data.json())\n            .then(data => {\n                game.questions = data;\n                // hide loading\n            });\n    },\n\n    // Start a new game\n    new: function () {\n\n        game.count++;\n        game.currentGame = {\n            points: 0,\n            question: 0\n        };\n\n        answers.innerHTML = '';\n        game.updateStats();\n        game.enableControls();\n        game.nextQuestion();\n    },\n\n    // Stop current game\n    stop: function () {\n\n        clearInterval(this.timer);\n        game.disableControls();\n    },\n\n    // Run every second, the game engine\n    iterate: function () {\n\n        game.currentQuestion.timeLeft--;\n        game.updateStats();\n        game.revealHint();\n        if (game.currentQuestion.timeLeft < 1) {\n            game.logAnswer(false);\n            game.nextQuestion();\n        }\n    },\n\n    // Slowly reveal a hint\n    revealHint: function () {\n\n        const answer = game.currentQuestion.phrase;\n        const len = Math.floor(answer.length / game.settings.answerTiemLimit * (game.settings.answerTiemLimit - game.currentQuestion.timeLeft));\n        const stars = new Array(answer.length + 1).join(\"*\");\n\n        // playAnswerInput.placeholder = answer.substr(0, len);\n        playAnswerInput.placeholder = answer.substr(0, len) + stars.slice(len);\n    },\n\n    // Calculate points logic\n    addPoints: function () {\n        game.currentGame.points += game.currentQuestion.timeLeft;\n    },\n\n    // Select random questions from the questions object\n    nextQuestion: function () {\n\n        let count = 0,\n            result = null;\n\n        for (let phrase in game.questions) {\n            if (Math.random() < 1 / ++count) {\n                result = phrase;\n            }\n        }\n\n        game.currentQuestion = {\n            phrase: result,\n            description: game.questions[result],\n            timeLeft: game.settings.answerTiemLimit\n        };\n\n        clearInterval(game.timer);\n        game.timer = setInterval(game.iterate, 1000);\n\n        game.currentGame.question++;\n\n        game.updateStats();\n        game.displayQuestion();\n    },\n\n    // Log wrong answer and start next question\n    skipQuestion: function () {\n\n        game.logAnswer(false);\n        game.nextQuestion();\n    },\n\n    // Check if entered answer is correct\n    checkAnswer: function () {\n\n        if (playAnswerInput.value.toLowerCase() === game.currentQuestion.phrase.toLowerCase()) {\n            game.logAnswer(true);\n            game.nextQuestion();\n        }\n    },\n\n    // Display a question\n    displayQuestion: function () {\n\n        playAnswerInput.placeholder = '';\n        playAnswerInput.value = '';\n        playAnswerInput.focus();\n\n        definitionDesc.innerHTML = game.currentQuestion.description;\n        if (game.debug) {\n            hintDesc.innerHTML = game.currentQuestion.phrase;\n        }\n\n    },\n\n    // Update stats panel (time, question, points)\n    updateStats: function () {\n\n        statsQuestion.innerHTML = game.currentGame.question;\n        statsPoints.innerHTML = game.currentGame.points;\n        statsTimer.innerHTML = game.currentQuestion.timeLeft;\n    },\n\n    // Log asnwer in the answer list\n    logAnswer: function (result) {\n\n        if (result) {\n            game.addPoints();\n        }\n\n        const li = document.createElement('li');\n        li.classList.add(result ? 'good' : 'bad');\n        // li.appendChild(document.createTextNode(`${game.currentQuestion.phrase}`));\n        li.innerHTML = `<strong>${game.currentQuestion.phrase}</strong><br />- ${game.currentQuestion.description}`;\n        answers.insertBefore(li, answers.childNodes[0]);\n\n        game.updateStats();\n    },\n\n    // Enable controls when the game starts\n    enableControls: function () {\n\n    },\n\n    // Disable controls when not in the game\n    disableControls: function () {\n\n    }\n};\n","'use strict';\n\n// Assign ctrls to js consts\nconst playAnswerInput = document.querySelector('.answer');\nconst definitionDesc = document.querySelector('.definition');\nconst hintDesc = document.querySelector('.hint');\nconst answers = document.querySelector('.answers');\nconst statsPoints = document.querySelector('.points');\nconst statsQuestion = document.querySelector('.question');\nconst statsTimer = document.querySelector('.timer');\n\n// Bind actions to ctrls\nconst ctrlNewGame = document.querySelector('.ctrl-newgame');\nctrlNewGame.onclick = () => {\n    game.new();\n    return false;\n};\n\nconst ctrlStop = document.querySelector('.ctrl-stop');\nctrlStop.onclick = () => {\n    game.stop();\n    return false;\n};\n\nconst playAnswerForm = document.querySelector('.answer-form');\nplayAnswerForm.onsubmit = () => {\n    return false;\n};\n\nconst playSkip = document.querySelector('.skip');\nplaySkip.onclick = () => {\n    game.skipQuestion();\n    return false;\n};\n\nplayAnswerInput.addEventListener('keyup', game.checkAnswer);\n","'use strict';\n(function (b, o, i, l, e, r) {\n    b.GoogleAnalyticsObject = l;\n    b[l] || (b[l] =\n        function () {\n            (b[l].q = b[l].q || []).push(arguments);\n        });\n    b[l].l = +new Date;\n    e = o.createElement(i);\n    r = o.getElementsByTagName(i)[0];\n    e.src = '//www.google-analytics.com/analytics.js';\n    r.parentNode.insertBefore(e, r)\n}(window, document, 'script', 'ga'));\nga('create', 'UA-88988916-2', 'auto');\nga('send', 'pageview');\n","'use strict';\n\n// Init the game\ngame.init();\n"]}